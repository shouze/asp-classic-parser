// ASP Classic Grammar - Stage 1: Basic Syntax
// This grammar defines the basic structure of ASP Classic files, including:
// - ASP tags and delimiters
// - Comments
// - Basic statements (Response.Write)
// - Statement separators
// - Line continuation
// - Simple expressions

// Basic whitespace and comment handling
WHITESPACE = _{ " " | "\t" | "\r" | "\n" }
COMMENT = _{ single_line_comment }
single_line_comment = _{ ("'" | "REM ") ~ (!("\n") ~ ANY)* }

// ASP delimiters - Define the boundaries of ASP code blocks
asp_open_tag = { "<%" }             // Standard opening ASP tag
asp_close_tag = { "%>" }            // Standard closing ASP tag
asp_open_equal = { "<%=" }          // Opening tag for ASP expressions (output)
asp_script_block = { asp_open_tag ~ inner_content ~ asp_close_tag }  // Complete ASP code block
asp_expression_block = { asp_open_equal ~ expression ~ asp_close_tag }  // ASP expression block (<%=...%>)

// Inner ASP content (code between ASP tags)
inner_content = { (!(asp_close_tag) ~ ANY)* }

// Line continuation - VBScript allows line continuation with underscore
line_continuation = _{ "_" ~ WHITESPACE* ~ "\r"? ~ "\n" }

// String literal with proper quote matching
string_literal = { "\"" ~ (!"\"" ~ ANY)* ~ "\"" }

// Basic statements
statement = { response_write | other_statement }
response_write = { "Response.Write" ~ WHITESPACE+ ~ expression }  // Common ASP output method
other_statement = { (!("Response.Write") ~ !("\n") ~ ANY)+ }

// Statement separator - allows multiple statements on one line
statement_separator = { ":" }

// Expressions (simplified for now, will be expanded in future stages)
expression = { string_literal | (!(asp_close_tag | statement_separator | string_literal) ~ ANY)+ }

// ASP file entry rule - The main rule that matches a complete ASP file
file = { SOI ~ (asp_script_block | asp_expression_block | (!asp_open_tag ~ ANY))* ~ EOI }